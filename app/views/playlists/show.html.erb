<%= javascript_include_tag "soundmanager2" %>
<%= javascript_include_tag "jquery.checkboxes.min" %>

<ul class="catalog dotted">
	<li class="selected"><%= link_to "Плейлисты", admin_playlists_path %></li>
</ul>
<ul class="all-list dotted">
	<li class="prev"><%= link_to "Предыдущий", playlist_path(@prev_playlist) rescue "<a href='#'>Предыдущий</a>" %></li>
	<li class="next"><%= link_to "Следующий", playlist_path(@next_playlist) rescue "<a href='#'>Следующий</a>" %></li>

  <% unless current_user.blank? -%>
    <% if current_user.playlists.include?(@playlist) or current_user.admin? -%>
      <li class="edit-playlist"><%= link_to_or_login "Редактировать", edit_admin_playlist_path(@playlist), :id => "playlist_edit" %></li>
      <li class="delete-playlist"><%= link_to_or_login "Удалить", admin_playlist_path(@playlist), :id => "playlist_edit", :method => :delete, :confirm => "Вы действительно желаете удалить плейлист с назнанием '#{@playlist.title}'?" %></li>
    <% end -%>
  <% end -%>


</ul>

<dl class="playlist">
	<dd id="description" class="descr"><span><%= @playlist.description_on_not %></span></dd>
	<dd class="playlist-prev">
		<span class="corn-top"><span></span></span>
		<span class="photo"><%= image_tag @playlist.icon.url(:thumb) %></span>
		<span class="corn-bot"><span></span></span>
	</dd>
	<dd id="title" class="name"><%= @playlist.title %></dd>
	<dd id="owner" class="autor">Автор: <span><%= @playlist.owner %></span></dd>
	<dd>Песен - <%= @playlist.tracks.size %></dd>
	<dd>Создан - <%= @playlist.created_at %></dd>
</dl>

<form action="#" method="post" class="edit_post" id="form_tracks">


					<div class="player-wr">
						<p class="current-track"></p>
							<div class="player">
								<a href="#" class="play" onclick="play_pause(); return false;"></a>
								<span class="timeline">
                                                                  <span class="timeline-act" style="width:0%"></span>
									<div id="track_slider"></div>
								</span>
								<a href="#" class="clip" onclick="stop_track(); return false;"></a>
								<a href="#" class="clip2"></a>
                <span class="time"><span id="track_time">00:00</span><span>&nbsp;-&nbsp;</span><span id="time_end">00:00</span></span>
							</div>
					</div>




<div class="new-popular">

  <table class="mp3-list" id="tracks">
    <% @tracks.each_with_index do |track, index| %>
      <%if false #request.path_parameters[:controller] == "playlists" %>
        <%= render :partial => "track_for_play", :locals => {:track => track, :index => index, :playlist_id => @playlist.id} %>
      <%else%>
        <%= render :partial => "admin/playlists/track_for_delete", :locals => {:track => track, :index => index, :playlist_id => @playlist.id} %>
      <%end%>
    <% end %>
  </table>


</div>
</form>
<% if current_user %>
<div class="cart">
  <p><a href="#">Корзина (<%= current_user.cart_tracks.size rescue ''%>)</a></p>
</div>

<ul class="tracks-in-playlist">
  <li><a class="mix" title="Проигрывание выбраных треков в случайном порядке" onclick="random_play(); return false;"></a></li>
  <li><a class="download" title="Добавить выбраные треки в корзину" onclick="send_form();"></a></li>
</ul>

<% end %>

<!--
<p class="info">Для сохранения изменений нажмите “Сохранить” или “Отменить”, если не хотите изменять данные</p>
-->
<%= paginate @tracks %>

<script type="text/javascript">

function send_form() {
  query_data = "";
  $("#form_tracks input:checkbox").each(function(index){

    if($(this).attr("checked") == true) {
//    alert($(this).attr("value"));
    query_data = query_data + "track_ids[]=" + $(this).attr("value") + "&";
    }
  });

  if(query_data.length > 0) {
      $.ajax({
        url: "/admin/playlists/to_cart_from_playlist",
        cache: false,
        data: query_data,
        success: function(html){
          window.location = "/cart";
        }
      });
  } else {
    alert("Выберите один или несколько треков.");
  }

}



$(document).ready(function () {
  $("#track_slider").slider();
  $("#form_tracks").unCheckCheckboxes();
});

var mySound = null

soundManager.useFlashBlock = false; // skip for now. See the flashblock demo when you want to start getting fancy.
soundManager.url = '/flash/'; // directory where SM2 .SWFs live
soundManager.debugMode = false;
soundManager.consoleOnly = false;


var track_duration = null;
var time_end = null;
var mysound = null;
var base_duration = null;
var random = null;

function stop_track() {
  if(check_play != null) {
    check_play.stop();
    $("#track_slider > a:first").css("left", "0%");
  }  
}

function play_pause() {
//  alert(check_play.playState);
  if(check_play != null) {
    if(check_play.playState == 1) {
      check_play.togglePause();
    }
    else{
      if(playlist.length == 0) {
        new_playlist();
      }
      else {
        play_next_track(); 
      }
    }
  }
  else {
    play_next_track();
//    new_playlist();
  }
}

function new_playlist() {
  $("#form_tracks input:checkbox").each(function(index){
    if($(this).attr("checked") == true) {
      playlist.unshift([$(this).attr("id"), $(this).attr("href"), $(this).attr("data_title"), $(this).attr("duration")]);
    }
  });

  if(playlist.length > 0) {
    play_next_track();
  }
  else
  {
    alert("Отметье в плейлисте треки для прослушивания");
  }

}

function human_time(sec) {
  seconds = Math.floor(sec / 1000);
  min = Math.floor(seconds / 60);
  ostatok = seconds - (min * 60);
  ostatok = ostatok.toString();
  if (ostatok.length == 1){
    ostatok = "0" + ostatok;
  }
  rez = min + ":" + ostatok
  return rez;
}

var playlist = new Array();
var check_play = null;

function uncheck_check_box(id) {
  $("#" + id).attr("checked", false);
}

var temp = null;
function initial_new_sound() {
  if(playlist.length > 0) {
    play_next_track();
  }
}

function random_play() {
  random = true;
  playlist = [];
  new_playlist();
/*
alert(check_play);
    if(check_play != null) {
      check_play.stop();
    }
*/
  new_playlist();
}


var mouse_down = false;
function play_next_track() {
//  alert(playlist.length);
//  if (check_play == null) {

    track = "";
    if(random == true) {
      max = playlist.length - 1;
      min = 0;
//      alert(playlist[0]);
//      alert("max=" + max);
      rand_num_for_track = Math.random() * (max - min) + min;
      rand_num_for_track = Math.round(rand_num_for_track);
//      alert(rand_num_for_track);
//      alert(playlist[rand_num_for_track]);
      track = playlist[rand_num_for_track];
    }
    else {
//      alert("random_false");
      track = playlist[0];
    }

    if(check_play != null) {
      check_play.stop();
    }


    add_title_up_player(track[2]);
    check_play = soundManager.createSound({
      id: track[0],
      url: track[1],
      onfinish:function() {
        initial_new_sound();
      }
    })


    base_duration = parseInt(track[3]) * 1000;
    time_end = base_duration;
    time_end = human_time(time_end);
    $("#time_end").html(time_end);

    if(random != true) {
      playlist.shift();
    }

    check_play.options.whileplaying = function() {
    percentage = this.position / parseInt(base_duration);
    percentage = percentage * 100;

    progres_load = (this.bytesLoaded / this.bytesTotal) * 100;
    $(".timeline-act").css("width", progres_load.toFixed(2) + "%");
      soundManager._writeDebug('sound '+this.sID+' playing, '+this.position+' of '+this.duration+" base_duration " + base_duration);

      $("#track_slider > a:first").css("left", percentage.toFixed(2) + "%");

      time_position = human_time(this.position);
      $("#track_time").html(time_position);
    }

    $(".ui-slider-handle").mousedown(function(){
      if(check_play != null) {
        check_play.stop();
        mouse_down = true;
      }
    });

    $(document).mouseup(function(){
      if(mouse_down == true ) {
        mouse_down = false;
        left = parseInt($("#track_slider > a:first").css("left"));
//        alert(base_duration);
        track_position = (base_duration / 100) * left;
        track_position = parseInt(track_position);
        check_play.play({position:track_position});
      }
    });

    check_play.play("play_track");
    check_play.play({position:0});
//  }
}

function clear_mysound() {
  if (mysound != null) {
    mysound.stop();
    mysound = null;
    playlist = new Array();
    time_end = null;
  }
}

function clear_check_play() {
  if (check_play != null) {
    check_play.stop();
    check_play = null;
    time_end = null;
//    $("#form_tracks").unCheckCheckboxes();
  }
}


$(".check_for_play").click(function(){
  clear_mysound();
//  alert($(this).attr("checked"));
  if($(this).attr("checked") == true) {
    playlist.push([$(this).attr("id"), $(this).attr("href"), $(this).attr("data_title"), $(this).attr("duration")]);
  }
});

function add_title_up_player(title) {
  $(".current-track").html(title);
}


// Если жмём прошлушать 1 трек
$(".listen").click(function() {
  random = false;
  id = parseInt($(this).attr("id"));
  playlist = [];
  playlist.push(["track_for_play_" + id, $(this).attr("href"), $(this).attr("data_title"), $(this).attr("duration")]);
  $("#track_for_play_" + id).attr("checked", true);

    if(check_play != null) {
      check_play.stop();
      play_next_track();
    }
    else
    {
      play_next_track();
    }

  return false;

});


</script>

