<%= javascript_include_tag "soundmanager2" %>
<ul class="catalog dotted">
	<li class="selected"><%= link_to "Плейлисты", admin_playlists_path %></li>
</ul>
<ul class="all-list dotted">
	<li class="prev"><%= link_to "Предыдущий", playlist_path(@prev_playlist) rescue "<a href='#'>Предыдущий</a>" %></li>
	<li class="next"><%= link_to "Следующий", playlist_path(@next_playlist) rescue "<a href='#'>Следующий</a>" %></li>

  <% unless current_user.blank? -%>
    <% if current_user.playlists.include?(@playlist) or current_user.admin? -%>
      <li class="edit-playlist"><%= link_to_or_login "Редактировать", edit_admin_playlist_path(@playlist), :id => "playlist_edit" %></li>
      <li class="delete-playlist"><%= link_to_or_login "Удалить", admin_playlist_path(@playlist), :id => "playlist_edit", :method => :delete, :confirm => "Вы действительно желаете удалить плейлист с назнанием '#{@playlist.title}'?" %></li>
    <% end -%>
  <% end -%>


</ul>

<dl class="playlist">
	<dd id="description" class="descr"><span><%= @playlist.description_on_not %></span></dd>
	<dd class="playlist-prev">
		<span class="corn-top"><span></span></span>
		<span class="photo"><%= image_tag @playlist.icon.url(:thumb) %></span>
		<span class="corn-bot"><span></span></span>
	</dd>
	<dd id="title" class="name"><%= @playlist.title %></dd>
	<dd id="owner" class="autor">Автор: <span><%= @playlist.owner %></span></dd>
	<dd>Песен - <%= @playlist.tracks.size %></dd>
	<dd>Создан - <%= @playlist.created_at %></dd>
</dl>



					<ul class="tracks-in-playlist">
						<li><a class="mix"></a></li>
						<li><a class="download"></a></li>
						<li></li>
					</ul>

					<div class="player">
						<p class="current-track">ПЛЕЕР Ирина Добровольская и Артем Коновалов</p>
							<p class="player">
								<a href="#" class="play"></a>
								<span class="timeline">
									<!-- <span class="timeline-act">
										<a class="slider"></a>
									</span> -->
									<div id="track_slider"></div>
								</span>
								<a href="#" class="clip"></a>
								<a href="#" class="clip2"></a>
                <span class="time"><span id="track_time">00:00</span><span>&nbsp;-&nbsp;</span><span id="time_end">00:00</span></span>
							</p>
					</div>




<div class="new-popular">
  <table class="mp3-list" id="tracks">
    <% @tracks.each_with_index do |track, index| %>
      <%if request.path_parameters[:controller] == "playlists" %>
        <%= render :partial => "track_for_play", :locals => {:track => track, :index => index, :playlist_id => @playlist.id} %>
      <%else%>
        <%= render :partial => "track_for_delete", :locals => {:track => track, :index => index, :playlist_id => @playlist.id} %>
      <%end%>
    <% end %>
  </table>
</div>
<% if current_user %>
<div class="cart">
  <p><a href="#">Корзина (<%= current_user.cart_tracks.size rescue ''%>)</a></p>
</div>
<% end %>

<!--
<p class="info">Для сохранения изменений нажмите “Сохранить” или “Отменить”, если не хотите изменять данные</p>
-->
<%= paginate @tracks %>

<script type="text/javascript">
$(document).ready(function () {
  $("#track_slider").slider();
});

var mySound = null

soundManager.useFlashBlock = false; // skip for now. See the flashblock demo when you want to start getting fancy.
soundManager.url = '/flash/'; // directory where SM2 .SWFs live
soundManager.debugMode = false;
soundManager.consoleOnly = false;
soundManager.onready(function(oStatus) {
  // check if SM2 successfully loaded..
  if (oStatus.success) {
    // SM2 has loaded - now you can create and play sounds!
  <%= render :partial => 'create_sound', :collection => @tracks %>

  }
});

var track_duration = null;
var time_end = null;
var mysound = null;

function human_time(sec) {
  seconds = Math.floor(sec / 1000);
  min = Math.floor(seconds / 60);
  ostatok = seconds - (min * 60);
  ostatok = ostatok.toString();
  if (ostatok.length == 1){
    ostatok = "0" + ostatok;
  }
  rez = min + ":" + ostatok
  return rez;
}

var playlist = new Array();
var check_play = null;

function start_play_playlist() {

}

function uncheck_check_box(id) {
  $("#" + id).attr('checked', false);
}

var temp = null;
function initial_new_sound() {
  check_play = null;
  uncheck_check_box(playlist[0][0]);
  playlist.shift();
  if(playlist.length > 0) {
    play_next_track();
  }
}

function play_next_track() {
//  alert(playlist.length);
  if (check_play == null) {
    track = playlist[0];
    check_play = soundManager.createSound({
      id: track[0],
      url: track[1],
      onfinish:function() {
        initial_new_sound();
      }
    })

    check_play.options.whileplaying = function() {
      percentage = this.position / this.duration;
      soundManager._writeDebug('sound '+this.sID+' playing, '+this.position+' of '+this.duration);

      $("#track_slider > a:first").css("left", percentage.toFixed(2) * 100 + "%");

      time_position = human_time(this.position);
      if (time_end == null) {
        track_duration = this.duration
        time_end = human_time(this.duration);
        $("#time_end").html(time_end);
      }
      $("#track_time").html(time_position);
    }

    $(".ui-slider-handle").mousedown(function(){
      if(check_play != null) {
        check_play.stop();
      } else {
        mysound.stop();
      }
    });

    $(".player").mouseup(function(){
      left = parseInt($("#track_slider > a:first").css("left"));
      track_position = (track_duration / 100) * left;
      track_position = parseInt(track_position);
      if(check_play != null) {
        check_play.play({position:track_position});
      } else {
        mysound.play({position:track_position});
      }
    });

    check_play.play("play_track");
    check_play.play({position:0});
  }
}

function clear_mysound() {
  if (mysound != null) {
    mysound.stop();
    mysound = null;
    playlist = new Array();
    time_end = null;
  }
}

function clear_check_play() {
  if (check_play != null) {
    check_play.stop();
    check_play = null;
    time_end = null;
  }
}

$(".check_for_play").click(function(){
  clear_mysound();
  playlist.push([$(this).attr("id"), $(this).attr("href")]);
  play_next_track();
});

// Если жмём прошлушать 1 трек
$(".listen").click(function() {
  clear_check_play()

  $(".player").mouseup(function(){
    left = parseInt($("#track_slider > a:first").css("left"));
    track_position = (track_duration / 100) * left;
    track_position = parseInt(track_position);
      if(check_play != null) {
        check_play.play({position:track_position});
      } else {
        mysound.play({position:track_position});
      }
  });

  mysound = soundManager.createSound({
   id: 'mySound', // required
   url: $(this).attr("href") // required
  });

  mysound.stop();

    $(".ui-slider-handle").mousedown(function(){
      if(check_play != null) {
        check_play.stop();
      } else {
        mysound.stop();
      }
    });

mysound.options.whileplaying = function() {

  percentage = this.position / this.duration;
  soundManager._writeDebug('sound '+this.sID+' playing, '+this.position+' of '+this.duration);
  $("#track_slider > a:first").css("left", percentage.toFixed(2) * 100 + "%");

  time_position = human_time(this.position);

  if (time_end == null) {
    track_duration = this.duration
    time_end = human_time(this.duration);
    $("#time_end").html(time_end);
  }

  $("#track_time").html(time_position);
}
  mysound.play();
  return false;
});


</script>



<script type="text/javascript" charset="utf-8">
  var list_track = []
  var timer = null;

    function play_next()
    {
      alert(list_track.length)
      if (list_track.length > 1)
      {
        delete list_track[0]
        play(list_track[0])
      }
    }

    function play(track) {
      $("div.player").show();
      AudioPlayer.load("audioplayer_0", track[3]);
      AudioPlayer.open("audioplayer_0");
      $("p.current-track").text(track[0]+ ":" + track[1])
      timer = setTimeout(play_next, track[2]);
    }

  $(document).ready(function(){
    $(".check_for_playasdasd").click(function(){
      list_track = list_track.concat([$(this).attr('data_author'), $(this).attr("data_title"), $(this).attr("duration"), $(this).attr("href")]);
      if (list_track.length = 1) {
        play(list_track[0]);
      }
    });
  });




  $(function(){

    $(".listesssn").live('click',function(){
      $("div.player").show();
      var track_url = $(this).attr('href');
      AudioPlayer.load("audioplayer_0", track_url);
      AudioPlayer.open("audioplayer_0");
      $("p.current-track").text($(this).attr('data_author')+ ":" + $(this).attr('data_title'))

      return false;
    });

  });
</script>

