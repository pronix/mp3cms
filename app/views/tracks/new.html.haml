%ul.catalog.dotted
  %li= link_to I18n.t("account.title"), account_path
  %li.selected= link_to I18n.t("tracks.upload_tracks"), new_track_path
%fieldset
  = render :partial => "ftp_params"
  %label.yellow
    = I18n.t("tracks.local_download")
    = link_to I18n.t("tracks.add_form"),"", :style => "font-size: 80%;", :id => "add_upload_form"
  - @tracks = [Track.new] if @tracks.blank?
  = form_for "tracks", :url => tracks_path, :method => :post, :html => { :multipart => true , :class => "upload-files"} do |form|
    - if current_user.playlists.size > 0
      .inline
        %label Плейлист:
      = select_tag "playlist_id", raw(current_user.playlists.map{ |l| "<option value='#{l.id}'>#{l.title}</option>" }.join())
    %ul.upload-list
      - @tracks.size.times do |i|
        = fields_for "tracks[]", (@tracks.first || Track.new) do |f|
          - @tracks.each do |track|
            = error_messages!(track) unless track.errors.blank?
          %li
            %label.numeric
              = i+1
              \.
            .file-wr
              .MultiFile-wrap
                %input.fileInput{:name => "tracks[][data]", :size => "66", :type => "file"}/
              .mask
                %input{:id => "tracks_#{i+1}_data", :type => "text"}/
            %p.left
              = link_to "", "", :class => "delete delete_form" if i > 0
    = submit_tag "",  :class => "upload-btn", :id => "darck"
#dialog1
%fieldset
  %label.yellow= I18n.t("tracks.remote_download")
  = form_tag upload_tracks_path do
    %div
      = @error_upload if @error_upload
      = text_area_tag "data_url", nil, :rows => 4, :cols => 40
      = submit_tag "",  :class => "upload-btn"

%script{:charset => "utf-8", :type => "text/javascript"}
  $(function(){

  $("input.fileInput").live('change',function(){
  var text_el =  $(this).parent("div:first").next("div").find("input")
  $(text_el).val( $(this).val() )
  });

  $("a.delete_form").live('click', function(){
  $(this).parents("li:last").remove();
  return false;
  });

  $("#add_upload_form").click(function(){
  if ($(".upload-list:first>li").length < 10) {
  var _li = $(".upload-list:first>li:first").clone();
  _li.find("input").val("");
  var next_id = $(".upload-list:first>li").length+1;
  $(_li).find("label.numeric:first").text(next_id+'.');

  $.each($(_li).find('*'),function(i,item){
  if (!!$(item).attr('id')) {
  _id = $(item).attr('id');
  $(item).attr('id', _id.replace('1',next_id))
  };
  });
  $(_li).append("<p class='left'><a class='delete delete_form'></a></p>");
  $(".upload-list:first").append($(_li));
  } else {
  alert('Не больше 10 форм');
  };
  return false;
  });
  });
